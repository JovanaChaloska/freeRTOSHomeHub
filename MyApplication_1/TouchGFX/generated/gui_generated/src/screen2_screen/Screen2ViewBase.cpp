/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_TEMPICON_ID));
    scalableImage1.setPosition(149, 206, 60, 56);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(150);
    add(scalableImage1);

    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_LIGHTICON_ID));
    scalableImage1_1.setPosition(210, 206, 60, 56);
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1_1);

    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_AIRICON_ID));
    scalableImage1_2.setPosition(270, 206, 79, 56);
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1_2.setAlpha(150);
    add(scalableImage1_2);

    airButton.setBoxWithBorderPosition(0, 0, 50, 50);
    airButton.setBorderSize(5);
    airButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    airButton.setAlpha(0);
    airButton.setAction(flexButtonCallback);
    airButton.setPosition(284, 212, 50, 50);
    add(airButton);

    tempButton.setBoxWithBorderPosition(0, 0, 50, 50);
    tempButton.setBorderSize(5);
    tempButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    tempButton.setAlpha(0);
    tempButton.setAction(flexButtonCallback);
    tempButton.setPosition(154, 209, 50, 50);
    add(tempButton);

    line1.setPosition(216, 262, 49, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(95, 5);
    line1.setLineWidth(2);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    textAreaLight.setXY(0, 0);
    textAreaLight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaLight.setLinespacing(0);
    Unicode::snprintf(textAreaLightBuffer, TEXTAREALIGHT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5EKX).getText());
    textAreaLight.setWildcard(textAreaLightBuffer);
    textAreaLight.resizeToCurrentText();
    textAreaLight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BZ9N));
    add(textAreaLight);
}

Screen2ViewBase::~Screen2ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &airButton)
    {
        //Interaction1
        //When airButton clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
    if (&src == &tempButton)
    {
        //Interaction2
        //When tempButton clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
