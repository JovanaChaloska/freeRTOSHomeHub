/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>
#include<images/SVGDatabase.hpp>

Screen3ViewBase::Screen3ViewBase() :
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box2.setPosition(0, 0, 480, 272);
    box2.setColor(touchgfx::Color::getColorFromRGB(194, 183, 112));
    add(box2);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    box1.setAlpha(0);
    add(box1);

    line1.setPosition(250, 259, 51, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(95, 5);
    line1.setLineWidth(2);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    textAreaPollution.setXY(143, 162);
    textAreaPollution.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaPollution.setLinespacing(0);
    Unicode::snprintf(textAreaPollutionBuffer, TEXTAREAPOLLUTION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FT94).getText());
    textAreaPollution.setWildcard(textAreaPollutionBuffer);
    textAreaPollution.resizeToCurrentText();
    textAreaPollution.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7KK));
    add(textAreaPollution);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_TEMPICON_ID));
    scalableImage1.setPosition(176, 209, 64, 50);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(150);
    add(scalableImage1);

    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_AIRICON_ID));
    scalableImage1_2.setPosition(240, 206, 73, 53);
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1_2);

    tempButton.setBoxWithBorderPosition(0, 0, 50, 50);
    tempButton.setBorderSize(5);
    tempButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    tempButton.setAlpha(0);
    tempButton.setAction(flexButtonCallback);
    tempButton.setPosition(183, 207, 50, 50);
    add(tempButton);

    fanImage.setSVG(SVG_FANIMAGE_ID);
    fanImage.setPosition(176, 20, 129, 130);
    fanImage.setScale(0.11f, 0.11f);
    fanImage.setImagePosition(0, 0);
    fanImage.setRotationCenter(0, 0);
    fanImage.setRotation(0.0f);
    add(fanImage);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_PRESENT_ID));
    scalableImage2.setPosition(8, 9, 53, 45);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);
}

Screen3ViewBase::~Screen3ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &tempButton)
    {
        //Interaction1
        //When tempButton clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
